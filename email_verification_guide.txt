# API Xác thực Email Đăng ký

## 1. Đăng ký tài khoản
- **URL**: `POST /api/auth/register`
- **Request**:
  ```json
  {
    "email": "user@example.com",
    "password": "your_password",
    "rePassword": "your_password",
    "fullname": "Nguyen Van A"
  }
  ```
- **Response Success (200)**: `{"message": "Verification email sent. Please check your inbox."}`
- **Response Error (400)**: `{"error": "Email is already registered"}`

## 2. Quy trình xác thực email (Frontend)

### Cách 1: Xử lý thông qua API (Khuyến nghị)
1. Người dùng nhấp vào liên kết trong email: `{backendUrl}/api/auth/verify?token={token}`
2. Backend redirect người dùng về frontend với tham số token: `{frontendUrl}/verify-account?token={token}`
3. Frontend lấy token từ URL và gọi API `/api/auth/verify-token` để xác thực
4. Hiển thị kết quả thành công/thất bại dựa trên response

### Cách 2: Sử dụng API redirect (Không khuyến nghị - có thể gây duplicate request)
- **URL**: `GET /api/auth/verify?token={verification_token}`
- **Hành động**: Backend xác thực token và tự động chuyển hướng đến trang frontend
- **Chuyển hướng thành công**: `{frontendUrl}/verification-success?email={email}`
- **Chuyển hướng thất bại**: `{frontendUrl}/verification-failed?error={error}&email={email}&reason={reason}`
- **Lưu ý**: Phương pháp này có thể gây ra duplicate request khi trình duyệt tự động gửi request thứ hai

## 3. Kiểm tra trạng thái token
- **URL**: `GET /api/auth/check-token?token={verification_token}`
- **Mục đích**: Kiểm tra token có hợp lệ không mà không kích hoạt tài khoản
- **Response Success (200)**:
  ```json
  {
    "valid": true,
    "email": "user@example.com"
  }
  ```
- **Response Error (200 với valid=false)**:
  ```json
  {
    "valid": false,
    "reason": "TOKEN_INVALID|TOKEN_EXPIRED|TOKEN_USED",
    "message": "Token không hợp lệ | Token đã hết hạn | Token đã được sử dụng"
  }
  ```

## 4. Xác thực token (API chính thức)
- **URL**: `POST /api/auth/verify-token?token={verification_token}`
- **Mục đích**: API chính thức để xác thực email và kích hoạt tài khoản
- **Response Success (200)**:
  ```json
  {
    "message": "Email verified successfully",
    "email": "user@example.com"
  }
  ```
- **Response Error (400)**:
  ```json
  {
    "error": "Invalid or expired verification token"
  }
  ```

## 5. Gửi lại email xác thực
- **URL**: `POST /api/auth/resend-verification`
- **Request**: `{"email": "user@example.com"}`
- **Response Success (200)**: `{"message": "Verification email resent. Please check your inbox."}`
- **Response Error (400)**: `{"error": "User is already registered with this email"}`

## 6. Quy trình xác thực khuyến nghị cho Frontend

1. **Khi người dùng đăng ký**:
   - Gọi API `POST /api/auth/register`
   - Hiển thị thông báo "Đã gửi email xác thực"

2. **Khi người dùng nhấp vào liên kết trong email**:
   - Backend chuyển hướng về frontend với URL dạng: `{frontendUrl}/verify-account?token={token}`
   - Frontend nhận token từ URL parameters
   - Frontend gọi API `POST /api/auth/verify-token` để xác thực token
   - Hiển thị kết quả xác thực dựa trên response

3. **Xử lý trường hợp lỗi**:
   - Token không hợp lệ/hết hạn: Hiển thị nút "Gửi lại email xác thực"
   - Email đã tồn tại: Hiển thị liên kết "Đăng nhập" và "Quên mật khẩu" 