Hibernate: select s1_0.id,s1_0.name,s1_0.status,s1_0.user_id,u1_0.id,u1_0.balance,u1_0.birthdate,u1_0.fullname,u1_0.is_admin,u1_0.password,u1_0.status,u1_0.username,u1_0.verified from shops s1_0 join users u1_0 on u1_0.id=s1_0.user_id where s1_0.id=?
2025-06-03T09:22:30.401+07:00 DEBUG 4988 --- [legram Executor] c.g.a.service.impl.ShopAIServiceImpl     : Sending intent analysis request to Gemini API: {"contents":[{"parts":[{"text":"Recent conversation history:\nCustomer: mih muốn đặt 5 chai coca\nAssistant: Chào taonesnkaja! Dạ mình hiểu bạn muốn đặt 5 chai Coca-Cola. Để hoàn tất đơn hàng, bạn vui lòng cho mình biết địa chỉ giao hàng là gì nhé?\nCustomer: mih ở 77 nguyễn huệ, thành phố huế. sdt của mih là 0327538428\nAssistant: Dạ vâng, em đã nhận được địa chỉ giao hàng là 77 Nguyễn Huệ, thành phố Huế và số điện thoại 0327538428. Em đang tiến hành lên đơn 5 chai Coca-Cola giao đến địa chỉ này cho mình nhé.\nCustomer: ,check tình trạng đơn hàng #61 giúp mih với ạ\n\nYou are a shop assistant. Analyze this customer message in context of any previous conversation: \",check tình trạng đơn hàng #61 giúp mih với ạ\"\n\nDetermine the intent and whether shop product context is needed to properly respond.\n\nIMPORTANT: If this message is ONLY providing an address in response to a previous question, set the detected_intent to 'ADDRESS_RESPONSE' instead of 'PLACEORDER'. When the intent is ADDRESS_RESPONSE, set action_required to true and create_order to true.\n\nIf you previously asked the customer for an address for an order, include these order details in the response:\n1. Set create_order: true\n2. Include full action_details with action_type: 'PLACEORDER', product_id and quantity\n3. Extract any product mention and quantities from previous messages\n\nIMPORTANT: Standard action codes to use:\n- GREETING: Simple greeting or welcome message\n- GETPRODUCT: Get detailed information about a specific product\n- SEARCHPRODUCT: Search for products matching keywords\n- ADDTOCART: Add a product to the customer's cart\n- PLACEORDER: Complete the order process\n- CHECKORDER: Check order status\n- CANCELORDER: Cancel an existing order\n- SENDIMAGE: Send product images directly to customer\n- SHOWPRODUCT: Show product details with image\n- CONVERSATION_REFERENCE: Customer is asking about previous conversation\n- ADDRESS_RESPONSE: Customer is providing their address in response to a request\n- GENERAL_QUERY: General question not fitting other categories\n\nIMPORTANT CANCELORDER DETECTION GUIDELINES:\n1. Use CANCELORDER intent when messages include phrases like:\n   - 'hủy đơn hàng', 'hủy đơn', 'không mua nữa'\n   - 'huỷ giao dịch', 'không đặt hàng nữa', 'không muốn mua nữa'\n   - 'cancel order', 'cancel my order', 'don't want to buy anymore'\n2. If the customer mentions a specific order ID ('đơn hàng số X', 'mã đơn hàng X'):\n   - Include the 'order_id' field with the exact order number\n3. If no order ID is mentioned, do NOT include the 'order_id' field\n4. Set action_required: true for all cancellation requests\n5. Always provide a clear confirmation in response_text\n\nIMPORTANT ADDRESS_RESPONSE GUIDELINES:\n1. When customer is providing ONLY an address after you requested it:\n   - Set detected_intent: 'ADDRESS_RESPONSE'\n   - Set action_required: true\n   - Set create_order: true if this address is for an order\n   - Include extracted_address with the full address\n   - CRITICAL: If this address is for an order and you previously asked for it, ALWAYS include action_details with:\n     * action_type: 'PLACEORDER'\n     * product_id: Extract from previous conversation (find the product the customer wanted to buy)\n     * quantity: Extract from previous conversation (find the quantity the customer wanted)\n2. Look through the conversation history to find what product and quantity the customer wanted to order\n3. Examples of address-only responses:\n   - 'Địa chỉ của tôi là 123 Đường ABC'\n   - 'Giao đến 72 Hương An, Huế nhé'\n   - 'Nhà mình ở số 45 đường Trần Hưng Đạo'\n\nIMPORTANT: When customer asks about product images or product details, always prefer to use:\nIMPORTANT: When customer asks about product images or product details, always prefer to use:\n- SENDIMAGE: For sending multiple product images directly\n- SHOWPRODUCT: For showing detailed product information with image\n\nIMPORTANT: When customer asks about previous messages or what they asked before, use CONVERSATION_REFERENCE\n\nIMPORTANT: Always look for and extract delivery information when customer may provide it:\n1. Look for addresses: Any text related to addresses, delivery locations, house numbers, streets, etc.\n2. Look for phone numbers: Vietnamese phone numbers in formats like 0912345678, +84912345678, etc.\n3. Include the extracted information in extracted_address and extracted_phone fields.\n\nIMPORTANT: Keep your response_text short, natural, conversational, and human-like. Always respond in Vietnamese unless the customer uses English. Act like a friendly shop assistant, not an AI. Use casual language with appropriate Vietnamese expressions. For simple greetings like 'hello', 'hi', etc., just respond with a friendly greeting. Avoid lengthy, formal responses.\n\n"}]}],"generationConfig":{"response_mime_type":"application/json","temperature":0.3,"response_schema":{"type":"OBJECT","required":["response_text","detected_intent","needs_shop_context"],"properties":{"response_text":{"type":"STRING"},"detected_intent":{"type":"STRING","enum":["GREETING","GETPRODUCT","SEARCHPRODUCT","ADDTOCART","PLACEORDER","CHECKORDER","CANCELORDER","SENDIMAGE","SHOWPRODUCT","CONVERSATION_REFERENCE","ADDRESS_RESPONSE","GENERAL_QUERY"]},"needs_shop_context":{"type":"BOOLEAN"},"action_required":{"type":"BOOLEAN"},"extracted_address":{"type":"STRING","description":"Address extracted from the customer message, if any"},"extracted_phone":{"type":"STRING","description":"Phone number extracted from the customer message, if any"},"follow_up_questions":{"type":"ARRAY","description":"Suggested follow-up questions to maintain conversation flow","items":{"type":"STRING"}}}}}}
2025-06-03T09:22:30.402+07:00 DEBUG 4988 --- [legram Executor] o.s.web.client.RestTemplate              : HTTP POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-04-17:generateContent?key=AIzaSyB1EYnFlDSgFhqv3Kk4FDv1ukZvl4H7wBY
2025-06-03T09:22:30.402+07:00 DEBUG 4988 --- [legram Executor] o.s.web.client.RestTemplate              : Accept=[text/plain, application/json, application/*+json, */*]
2025-06-03T09:22:30.402+07:00 DEBUG 4988 --- [legram Executor] o.s.web.client.RestTemplate              : Writing [{"contents":[{"parts":[{"text":"Recent conversation history:\nCustomer: mih muốn đặt 5 chai coca\nAssistant: Chào taonesnkaja! Dạ mình hiểu bạn muốn đặt 5 chai Coca-Cola. Để hoàn tất đơn hàng, bạn vui lòng cho mình biết địa chỉ giao hàng là gì nhé?\nCustomer: mih ở 77 nguyễn huệ, thành phố huế. sdt của mih là 0327538428\nAssistant: Dạ vâng, em đã nhận được địa chỉ giao hàng là 77 Nguyễn Huệ, thành phố Huế và số điện thoại 0327538428. Em đang tiến hành lên đơn 5 chai Coca-Cola giao đến địa chỉ này cho mình nhé.\nCustomer: ,check tình trạng đơn hàng #61 giúp mih với ạ\n\nYou are a shop assistant. Analyze this customer message in context of any previous conversation: \",check tình trạng đơn hàng #61 giúp mih với ạ\"\n\nDetermine the intent and whether shop product context is needed to properly respond.\n\nIMPORTANT: If this message is ONLY providing an address in response to a previous question, set the detected_intent to 'ADDRESS_RESPONSE' instead of 'PLACEORDER'. When the intent is ADDRESS_RESPONSE, set action_required to true and create_order to true.\n\nIf you previously asked the customer for an address for an order, include these order details in the response:\n1. Set create_order: true\n2. Include full action_details with action_type: 'PLACEORDER', product_id and quantity\n3. Extract any product mention and quantities from previous messages\n\nIMPORTANT: Standard action codes to use:\n- GREETING: Simple greeting or welcome message\n- GETPRODUCT: Get detailed information about a specific product\n- SEARCHPRODUCT: Search for products matching keywords\n- ADDTOCART: Add a product to the customer's cart\n- PLACEORDER: Complete the order process\n- CHECKORDER: Check order status\n- CANCELORDER: Cancel an existing order\n- SENDIMAGE: Send product images directly to customer\n- SHOWPRODUCT: Show product details with image\n- CONVERSATION_REFERENCE: Customer is asking about previous conversation\n- ADDRESS_RESPONSE: Customer is providing their address in response to a request\n- GENERAL_QUERY: General question not fitting other categories\n\nIMPORTANT CANCELORDER DETECTION GUIDELINES:\n1. Use CANCELORDER intent when messages include phrases like:\n   - 'hủy đơn hàng', 'hủy đơn', 'không mua nữa'\n   - 'huỷ giao dịch', 'không đặt hàng nữa', 'không muốn mua nữa'\n   - 'cancel order', 'cancel my order', 'don't want to buy anymore'\n2. If the customer mentions a specific order ID ('đơn hàng số X', 'mã đơn hàng X'):\n   - Include the 'order_id' field with the exact order number\n3. If no order ID is mentioned, do NOT include the 'order_id' field\n4. Set action_required: true for all cancellation requests\n5. Always provide a clear confirmation in response_text\n\nIMPORTANT ADDRESS_RESPONSE GUIDELINES:\n1. When customer is providing ONLY an address after you requested it:\n   - Set detected_intent: 'ADDRESS_RESPONSE'\n   - Set action_required: true\n   - Set create_order: true if this address is for an order\n   - Include extracted_address with the full address\n   - CRITICAL: If this address is for an order and you previously asked for it, ALWAYS include action_details with:\n     * action_type: 'PLACEORDER'\n     * product_id: Extract from previous conversation (find the product the customer wanted to buy)\n     * quantity: Extract from previous conversation (find the quantity the customer wanted)\n2. Look through the conversation history to find what product and quantity the customer wanted to order\n3. Examples of address-only responses:\n   - 'Địa chỉ của tôi là 123 Đường ABC'\n   - 'Giao đến 72 Hương An, Huế nhé'\n   - 'Nhà mình ở số 45 đường Trần Hưng Đạo'\n\nIMPORTANT: When customer asks about product images or product details, always prefer to use:\nIMPORTANT: When customer asks about product images or product details, always prefer to use:\n- SENDIMAGE: For sending multiple product images directly\n- SHOWPRODUCT: For showing detailed product information with image\n\nIMPORTANT: When customer asks about previous messages or what they asked before, use CONVERSATION_REFERENCE\n\nIMPORTANT: Always look for and extract delivery information when customer may provide it:\n1. Look for addresses: Any text related to addresses, delivery locations, house numbers, streets, etc.\n2. Look for phone numbers: Vietnamese phone numbers in formats like 0912345678, +84912345678, etc.\n3. Include the extracted information in extracted_address and extracted_phone fields.\n\nIMPORTANT: Keep your response_text short, natural, conversational, and human-like. Always respond in Vietnamese unless the customer uses English. Act like a friendly shop assistant, not an AI. Use casual language with appropriate Vietnamese expressions. For simple greetings like 'hello', 'hi', etc., just respond with a friendly greeting. Avoid lengthy, formal responses.\n\n"}]}],"generationConfig":{"response_mime_type":"application/json","temperature":0.3,"response_schema":{"type":"OBJECT","required":["response_text","detected_intent","needs_shop_context"],"properties":{"response_text":{"type":"STRING"},"detected_intent":{"type":"STRING","enum":["GREETING","GETPRODUCT","SEARCHPRODUCT","ADDTOCART","PLACEORDER","CHECKORDER","CANCELORDER","SENDIMAGE","SHOWPRODUCT","CONVERSATION_REFERENCE","ADDRESS_RESPONSE","GENERAL_QUERY"]},"needs_shop_context":{"type":"BOOLEAN"},"action_required":{"type":"BOOLEAN"},"extracted_address":{"type":"STRING","description":"Address extracted from the customer message, if any"},"extracted_phone":{"type":"STRING","description":"Phone number extracted from the customer message, if any"},"follow_up_questions":{"type":"ARRAY","description":"Suggested follow-up questions to maintain conversation flow","items":{"type":"STRING"}}}}}}] as "application/json"
2025-06-03T09:22:33.036+07:00 DEBUG 4988 --- [legram Executor] o.s.web.client.RestTemplate              : Response 200 OK
2025-06-03T09:22:33.037+07:00 DEBUG 4988 --- [legram Executor] o.s.web.client.RestTemplate              : Reading to [java.lang.String] as "application/json;charset=UTF-8"
2025-06-03T09:22:33.037+07:00 DEBUG 4988 --- [legram Executor] c.g.a.service.impl.ShopAIServiceImpl     : Received intent analysis response from Gemini API: {
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "{\n  \"detected_intent\": \"CHECKORDER\",\n  \"needs_shop_context\": false,\n  \"response_text\": \"Dạ vâng, em sẽ kiểm tra tình trạng đơn hàng #61 giúp mình ngay ạ.\",\n  \"action_required\": true,\n  \"extracted_address\": \"\",\n  \"extracted_phone\": \"\",\n  \"follow_up_questions\": [\n    \"Bạn có muốn kiểm tra đơn hàng nào khác không?\",\n    \"Bạn cần hỗ trợ gì thêm không ạ?\"\n  ]\n}"
          }
        ],
        "role": "model"
      },
      "finishReason": "STOP",
      "index": 0
    }
  ],
  "usageMetadata": {
    "promptTokenCount": 1137,
    "candidatesTokenCount": 118,
    "totalTokenCount": 1491,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 1137
      }
    ],
    "thoughtsTokenCount": 236
  },
  "modelVersion": "models/gemini-2.5-flash-preview-04-17",
  "responseId": "Z1w-aJ2-Keil1MkP4u-TIA"
}

2025-06-03T09:22:33.038+07:00 DEBUG 4988 --- [legram Executor] c.g.a.service.impl.ShopAIServiceImpl     : Parsed intent analysis result from Gemini: {
  "detected_intent": "CHECKORDER",
  "needs_shop_context": false,
  "response_text": "Dạ vâng, em sẽ kiểm tra tình trạng đơn hàng #61 giúp mình ngay ạ.",
  "action_required": true,
  "extracted_address": "",
  "extracted_phone": "",
  "follow_up_questions": [
    "Bạn có muốn kiểm tra đơn hàng nào khác không?",
    "Bạn cần hỗ trợ gì thêm không ạ?"
  ]
}
2025-06-03T09:22:33.038+07:00  INFO 4988 --- [legram Executor] c.g.a.service.impl.ShopAIServiceImpl     : Simple query detected, responding without shop context: CHECKORDER
2025-06-03T09:22:34.548+07:00  INFO 4988 --- [legram Executor] c.g.assistant.telegram.ShopTelegramBot   : AI detected intent for Shop 1, User 7090029371: CHECKORDER
2025-06-03T09:22:34.548+07:00  INFO 4988 --- [legram Executor] c.g.assistant.telegram.ShopTelegramBot   : AI indicates action required for Shop 1, User 7090029371